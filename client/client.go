// Code generated by Fern. DO NOT EDIT.

package client

import (
	merge "github.com/merge-api/merge-go-client/v2"
	accountingclient "github.com/merge-api/merge-go-client/v2/accounting/client"
	atsclient "github.com/merge-api/merge-go-client/v2/ats/client"
	core "github.com/merge-api/merge-go-client/v2/core"
	crmclient "github.com/merge-api/merge-go-client/v2/crm/client"
	filestorageclient "github.com/merge-api/merge-go-client/v2/filestorage/client"
	hrisclient "github.com/merge-api/merge-go-client/v2/hris/client"
	internal "github.com/merge-api/merge-go-client/v2/internal"
	option "github.com/merge-api/merge-go-client/v2/option"
	ticketingclient "github.com/merge-api/merge-go-client/v2/ticketing/client"
	http "net/http"
)

type Client struct {
	baseURL string
	caller  *internal.Caller
	header  http.Header

	Ats         *atsclient.Client
	Accounting  *accountingclient.Client
	Crm         *crmclient.Client
	FileStorage *filestorageclient.Client
	Hris        *hrisclient.Client
	Ticketing   *ticketingclient.Client
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	if options.BaseURL == "" {
		options.BaseURL = merge.Environments.Production
	}

	return &Client{
		baseURL: options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:      options.ToHeader(),
		Ats:         atsclient.NewClient(opts...),
		Accounting:  accountingclient.NewClient(opts...),
		Crm:         crmclient.NewClient(opts...),
		FileStorage: filestorageclient.NewClient(opts...),
		Hris:        hrisclient.NewClient(opts...),
		Ticketing:   ticketingclient.NewClient(opts...),
	}
}
