// This file was auto-generated by Fern from our API Definition.

package filestorage

import (
	fmt "fmt"
	time "time"
)

type FileStorageFolderEndpointRequest struct {
	// Whether to include debug fields (such as log file links) in the response.
	IsDebugMode *bool `json:"-"`
	// Whether or not third-party updates should be run asynchronously.
	RunAsync *bool          `json:"-"`
	Model    *FolderRequest `json:"model,omitempty"`
}

type FoldersListRequest struct {
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `json:"-"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `json:"-"`
	// The pagination cursor value.
	Cursor *string `json:"-"`
	// If provided, will only return folders in this drive.
	DriveId *string `json:"-"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *FoldersListRequestExpand `json:"-"`
	// Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
	IncludeDeletedData *bool `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `json:"-"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `json:"-"`
	// If provided, will only return folders with this name. This performs an exact match.
	Name *string `json:"-"`
	// Number of results to return per page.
	PageSize *int `json:"-"`
	// If provided, will only return folders in this parent folder. If null, will return folders in root directory.
	ParentFolderId *string `json:"-"`
	// The API provider's ID for the given object.
	RemoteId *string `json:"-"`
}

type FoldersRetrieveRequest struct {
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *FoldersRetrieveRequestExpand `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
}

type FoldersListRequestExpand string

const (
	FoldersListRequestExpandDrive                        FoldersListRequestExpand = "drive"
	FoldersListRequestExpandParentFolder                 FoldersListRequestExpand = "parent_folder"
	FoldersListRequestExpandParentFolderDrive            FoldersListRequestExpand = "parent_folder,drive"
	FoldersListRequestExpandPermissions                  FoldersListRequestExpand = "permissions"
	FoldersListRequestExpandPermissionsDrive             FoldersListRequestExpand = "permissions,drive"
	FoldersListRequestExpandPermissionsParentFolder      FoldersListRequestExpand = "permissions,parent_folder"
	FoldersListRequestExpandPermissionsParentFolderDrive FoldersListRequestExpand = "permissions,parent_folder,drive"
)

func NewFoldersListRequestExpandFromString(s string) (FoldersListRequestExpand, error) {
	switch s {
	case "drive":
		return FoldersListRequestExpandDrive, nil
	case "parent_folder":
		return FoldersListRequestExpandParentFolder, nil
	case "parent_folder,drive":
		return FoldersListRequestExpandParentFolderDrive, nil
	case "permissions":
		return FoldersListRequestExpandPermissions, nil
	case "permissions,drive":
		return FoldersListRequestExpandPermissionsDrive, nil
	case "permissions,parent_folder":
		return FoldersListRequestExpandPermissionsParentFolder, nil
	case "permissions,parent_folder,drive":
		return FoldersListRequestExpandPermissionsParentFolderDrive, nil
	}
	var t FoldersListRequestExpand
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (f FoldersListRequestExpand) Ptr() *FoldersListRequestExpand {
	return &f
}

type FoldersRetrieveRequestExpand string

const (
	FoldersRetrieveRequestExpandDrive                        FoldersRetrieveRequestExpand = "drive"
	FoldersRetrieveRequestExpandParentFolder                 FoldersRetrieveRequestExpand = "parent_folder"
	FoldersRetrieveRequestExpandParentFolderDrive            FoldersRetrieveRequestExpand = "parent_folder,drive"
	FoldersRetrieveRequestExpandPermissions                  FoldersRetrieveRequestExpand = "permissions"
	FoldersRetrieveRequestExpandPermissionsDrive             FoldersRetrieveRequestExpand = "permissions,drive"
	FoldersRetrieveRequestExpandPermissionsParentFolder      FoldersRetrieveRequestExpand = "permissions,parent_folder"
	FoldersRetrieveRequestExpandPermissionsParentFolderDrive FoldersRetrieveRequestExpand = "permissions,parent_folder,drive"
)

func NewFoldersRetrieveRequestExpandFromString(s string) (FoldersRetrieveRequestExpand, error) {
	switch s {
	case "drive":
		return FoldersRetrieveRequestExpandDrive, nil
	case "parent_folder":
		return FoldersRetrieveRequestExpandParentFolder, nil
	case "parent_folder,drive":
		return FoldersRetrieveRequestExpandParentFolderDrive, nil
	case "permissions":
		return FoldersRetrieveRequestExpandPermissions, nil
	case "permissions,drive":
		return FoldersRetrieveRequestExpandPermissionsDrive, nil
	case "permissions,parent_folder":
		return FoldersRetrieveRequestExpandPermissionsParentFolder, nil
	case "permissions,parent_folder,drive":
		return FoldersRetrieveRequestExpandPermissionsParentFolderDrive, nil
	}
	var t FoldersRetrieveRequestExpand
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (f FoldersRetrieveRequestExpand) Ptr() *FoldersRetrieveRequestExpand {
	return &f
}
