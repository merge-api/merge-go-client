// This file was auto-generated by Fern from our API Definition.

package ats

import (
	fmt "fmt"
	time "time"
)

type CandidateEndpointRequest struct {
	// Whether to include debug fields (such as log file links) in the response.
	IsDebugMode *bool `json:"-"`
	// Whether or not third-party updates should be run asynchronously.
	RunAsync     *bool             `json:"-"`
	Model        *CandidateRequest `json:"model,omitempty"`
	RemoteUserId string            `json:"remote_user_id"`
}

type IgnoreCommonModelRequest struct {
	Reason  ReasonEnum `json:"reason,omitempty"`
	Message *string    `json:"message,omitempty"`
}

type CandidatesListRequest struct {
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `json:"-"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `json:"-"`
	// The pagination cursor value.
	Cursor *string `json:"-"`
	// If provided, will only return candidates with these email addresses; multiple addresses can be separated by commas.
	EmailAddresses *string `json:"-"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *CandidatesListRequestExpand `json:"-"`
	// If provided, will only return candidates with this first name.
	FirstName *string `json:"-"`
	// Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
	IncludeDeletedData *bool `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-"`
	// If provided, will only return candidates with this last name.
	LastName *string `json:"-"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `json:"-"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `json:"-"`
	// Number of results to return per page.
	PageSize *int `json:"-"`
	// The API provider's ID for the given object.
	RemoteId *string `json:"-"`
	// If provided, will only return candidates with these tags; multiple tags can be separated by commas.
	Tags *string `json:"-"`
}

type PatchedCandidateEndpointRequest struct {
	// Whether to include debug fields (such as log file links) in the response.
	IsDebugMode *bool `json:"-"`
	// Whether or not third-party updates should be run asynchronously.
	RunAsync     *bool                    `json:"-"`
	Model        *PatchedCandidateRequest `json:"model,omitempty"`
	RemoteUserId string                   `json:"remote_user_id"`
}

type CandidatesRetrieveRequest struct {
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *CandidatesRetrieveRequestExpand `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
}

type CandidatesListRequestExpand string

const (
	CandidatesListRequestExpandApplications            CandidatesListRequestExpand = "applications"
	CandidatesListRequestExpandApplicationsAttachments CandidatesListRequestExpand = "applications,attachments"
	CandidatesListRequestExpandAttachments             CandidatesListRequestExpand = "attachments"
)

func NewCandidatesListRequestExpandFromString(s string) (CandidatesListRequestExpand, error) {
	switch s {
	case "applications":
		return CandidatesListRequestExpandApplications, nil
	case "applications,attachments":
		return CandidatesListRequestExpandApplicationsAttachments, nil
	case "attachments":
		return CandidatesListRequestExpandAttachments, nil
	}
	var t CandidatesListRequestExpand
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (c CandidatesListRequestExpand) Ptr() *CandidatesListRequestExpand {
	return &c
}

type CandidatesRetrieveRequestExpand string

const (
	CandidatesRetrieveRequestExpandApplications            CandidatesRetrieveRequestExpand = "applications"
	CandidatesRetrieveRequestExpandApplicationsAttachments CandidatesRetrieveRequestExpand = "applications,attachments"
	CandidatesRetrieveRequestExpandAttachments             CandidatesRetrieveRequestExpand = "attachments"
)

func NewCandidatesRetrieveRequestExpandFromString(s string) (CandidatesRetrieveRequestExpand, error) {
	switch s {
	case "applications":
		return CandidatesRetrieveRequestExpandApplications, nil
	case "applications,attachments":
		return CandidatesRetrieveRequestExpandApplicationsAttachments, nil
	case "attachments":
		return CandidatesRetrieveRequestExpandAttachments, nil
	}
	var t CandidatesRetrieveRequestExpand
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (c CandidatesRetrieveRequestExpand) Ptr() *CandidatesRetrieveRequestExpand {
	return &c
}
