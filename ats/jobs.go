// Code generated by Fern. DO NOT EDIT.

package ats

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/merge-api/merge-go-client/v2/internal"
	time "time"
)

type JobsListRequest struct {
	// If provided, will only return jobs with this code.
	Code *string `json:"-" url:"code,omitempty"`
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `json:"-" url:"created_after,omitempty"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `json:"-" url:"created_before,omitempty"`
	// The pagination cursor value.
	Cursor *string `json:"-" url:"cursor,omitempty"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand []*JobsListRequestExpandItem `json:"-" url:"expand,omitempty"`
	// Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
	IncludeDeletedData *bool `json:"-" url:"include_deleted_data,omitempty"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-" url:"include_remote_data,omitempty"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-" url:"include_shell_data,omitempty"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `json:"-" url:"modified_after,omitempty"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `json:"-" url:"modified_before,omitempty"`
	// If provided, will only return jobs for this office; multiple offices can be separated by commas.
	Offices *string `json:"-" url:"offices,omitempty"`
	// Number of results to return per page.
	PageSize *int `json:"-" url:"page_size,omitempty"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *string `json:"-" url:"remote_fields,omitempty"`
	// The API provider's ID for the given object.
	RemoteId *string `json:"-" url:"remote_id,omitempty"`
	// A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
	ShowEnumOrigins *string `json:"-" url:"show_enum_origins,omitempty"`
	// If provided, will only return jobs with this status. Options: ('OPEN', 'CLOSED', 'DRAFT', 'ARCHIVED', 'PENDING')
	//
	// * `OPEN` - OPEN
	// * `CLOSED` - CLOSED
	// * `DRAFT` - DRAFT
	// * `ARCHIVED` - ARCHIVED
	// * `PENDING` - PENDING
	Status *JobsListRequestStatus `json:"-" url:"status,omitempty"`
}

type JobsRetrieveRequest struct {
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand []*JobsRetrieveRequestExpandItem `json:"-" url:"expand,omitempty"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-" url:"include_remote_data,omitempty"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-" url:"include_shell_data,omitempty"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *string `json:"-" url:"remote_fields,omitempty"`
	// A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
	ShowEnumOrigins *string `json:"-" url:"show_enum_origins,omitempty"`
}

type JobsScreeningQuestionsListRequest struct {
	// The pagination cursor value.
	Cursor *string `json:"-" url:"cursor,omitempty"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand []*JobsScreeningQuestionsListRequestExpandItem `json:"-" url:"expand,omitempty"`
	// Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
	IncludeDeletedData *bool `json:"-" url:"include_deleted_data,omitempty"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-" url:"include_remote_data,omitempty"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-" url:"include_shell_data,omitempty"`
	// Number of results to return per page.
	PageSize *int `json:"-" url:"page_size,omitempty"`
}

type JobsListRequestExpandItem string

const (
	JobsListRequestExpandItemDepartments    JobsListRequestExpandItem = "departments"
	JobsListRequestExpandItemHiringManagers JobsListRequestExpandItem = "hiring_managers"
	JobsListRequestExpandItemJobPostings    JobsListRequestExpandItem = "job_postings"
	JobsListRequestExpandItemOffices        JobsListRequestExpandItem = "offices"
	JobsListRequestExpandItemRecruiters     JobsListRequestExpandItem = "recruiters"
)

func NewJobsListRequestExpandItemFromString(s string) (JobsListRequestExpandItem, error) {
	switch s {
	case "departments":
		return JobsListRequestExpandItemDepartments, nil
	case "hiring_managers":
		return JobsListRequestExpandItemHiringManagers, nil
	case "job_postings":
		return JobsListRequestExpandItemJobPostings, nil
	case "offices":
		return JobsListRequestExpandItemOffices, nil
	case "recruiters":
		return JobsListRequestExpandItemRecruiters, nil
	}
	var t JobsListRequestExpandItem
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (j JobsListRequestExpandItem) Ptr() *JobsListRequestExpandItem {
	return &j
}

type JobsListRequestStatus string

const (
	JobsListRequestStatusArchived JobsListRequestStatus = "ARCHIVED"
	JobsListRequestStatusClosed   JobsListRequestStatus = "CLOSED"
	JobsListRequestStatusDraft    JobsListRequestStatus = "DRAFT"
	JobsListRequestStatusOpen     JobsListRequestStatus = "OPEN"
	JobsListRequestStatusPending  JobsListRequestStatus = "PENDING"
)

func NewJobsListRequestStatusFromString(s string) (JobsListRequestStatus, error) {
	switch s {
	case "ARCHIVED":
		return JobsListRequestStatusArchived, nil
	case "CLOSED":
		return JobsListRequestStatusClosed, nil
	case "DRAFT":
		return JobsListRequestStatusDraft, nil
	case "OPEN":
		return JobsListRequestStatusOpen, nil
	case "PENDING":
		return JobsListRequestStatusPending, nil
	}
	var t JobsListRequestStatus
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (j JobsListRequestStatus) Ptr() *JobsListRequestStatus {
	return &j
}

type JobsRetrieveRequestExpandItem string

const (
	JobsRetrieveRequestExpandItemDepartments    JobsRetrieveRequestExpandItem = "departments"
	JobsRetrieveRequestExpandItemHiringManagers JobsRetrieveRequestExpandItem = "hiring_managers"
	JobsRetrieveRequestExpandItemJobPostings    JobsRetrieveRequestExpandItem = "job_postings"
	JobsRetrieveRequestExpandItemOffices        JobsRetrieveRequestExpandItem = "offices"
	JobsRetrieveRequestExpandItemRecruiters     JobsRetrieveRequestExpandItem = "recruiters"
)

func NewJobsRetrieveRequestExpandItemFromString(s string) (JobsRetrieveRequestExpandItem, error) {
	switch s {
	case "departments":
		return JobsRetrieveRequestExpandItemDepartments, nil
	case "hiring_managers":
		return JobsRetrieveRequestExpandItemHiringManagers, nil
	case "job_postings":
		return JobsRetrieveRequestExpandItemJobPostings, nil
	case "offices":
		return JobsRetrieveRequestExpandItemOffices, nil
	case "recruiters":
		return JobsRetrieveRequestExpandItemRecruiters, nil
	}
	var t JobsRetrieveRequestExpandItem
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (j JobsRetrieveRequestExpandItem) Ptr() *JobsRetrieveRequestExpandItem {
	return &j
}

type JobsScreeningQuestionsListRequestExpandItem string

const (
	JobsScreeningQuestionsListRequestExpandItemJob     JobsScreeningQuestionsListRequestExpandItem = "job"
	JobsScreeningQuestionsListRequestExpandItemOptions JobsScreeningQuestionsListRequestExpandItem = "options"
)

func NewJobsScreeningQuestionsListRequestExpandItemFromString(s string) (JobsScreeningQuestionsListRequestExpandItem, error) {
	switch s {
	case "job":
		return JobsScreeningQuestionsListRequestExpandItemJob, nil
	case "options":
		return JobsScreeningQuestionsListRequestExpandItemOptions, nil
	}
	var t JobsScreeningQuestionsListRequestExpandItem
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (j JobsScreeningQuestionsListRequestExpandItem) Ptr() *JobsScreeningQuestionsListRequestExpandItem {
	return &j
}

type PaginatedJobList struct {
	Next     *string `json:"next,omitempty" url:"next,omitempty"`
	Previous *string `json:"previous,omitempty" url:"previous,omitempty"`
	Results  []*Job  `json:"results,omitempty" url:"results,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (p *PaginatedJobList) GetNext() *string {
	if p == nil {
		return nil
	}
	return p.Next
}

func (p *PaginatedJobList) GetPrevious() *string {
	if p == nil {
		return nil
	}
	return p.Previous
}

func (p *PaginatedJobList) GetResults() []*Job {
	if p == nil {
		return nil
	}
	return p.Results
}

func (p *PaginatedJobList) GetExtraProperties() map[string]interface{} {
	return p.extraProperties
}

func (p *PaginatedJobList) UnmarshalJSON(data []byte) error {
	type unmarshaler PaginatedJobList
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PaginatedJobList(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.extraProperties = extraProperties
	p.rawJSON = json.RawMessage(data)
	return nil
}

func (p *PaginatedJobList) String() string {
	if len(p.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(p.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}

type PaginatedScreeningQuestionList struct {
	Next     *string              `json:"next,omitempty" url:"next,omitempty"`
	Previous *string              `json:"previous,omitempty" url:"previous,omitempty"`
	Results  []*ScreeningQuestion `json:"results,omitempty" url:"results,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (p *PaginatedScreeningQuestionList) GetNext() *string {
	if p == nil {
		return nil
	}
	return p.Next
}

func (p *PaginatedScreeningQuestionList) GetPrevious() *string {
	if p == nil {
		return nil
	}
	return p.Previous
}

func (p *PaginatedScreeningQuestionList) GetResults() []*ScreeningQuestion {
	if p == nil {
		return nil
	}
	return p.Results
}

func (p *PaginatedScreeningQuestionList) GetExtraProperties() map[string]interface{} {
	return p.extraProperties
}

func (p *PaginatedScreeningQuestionList) UnmarshalJSON(data []byte) error {
	type unmarshaler PaginatedScreeningQuestionList
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PaginatedScreeningQuestionList(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.extraProperties = extraProperties
	p.rawJSON = json.RawMessage(data)
	return nil
}

func (p *PaginatedScreeningQuestionList) String() string {
	if len(p.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(p.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}
