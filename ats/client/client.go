// Code generated by Fern. DO NOT EDIT.

package client

import (
	accountdetails "github.com/merge-api/merge-go-client/v2/ats/accountdetails"
	accounttoken "github.com/merge-api/merge-go-client/v2/ats/accounttoken"
	activities "github.com/merge-api/merge-go-client/v2/ats/activities"
	applications "github.com/merge-api/merge-go-client/v2/ats/applications"
	asyncpassthrough "github.com/merge-api/merge-go-client/v2/ats/asyncpassthrough"
	attachments "github.com/merge-api/merge-go-client/v2/ats/attachments"
	audittrail "github.com/merge-api/merge-go-client/v2/ats/audittrail"
	availableactions "github.com/merge-api/merge-go-client/v2/ats/availableactions"
	candidates "github.com/merge-api/merge-go-client/v2/ats/candidates"
	deleteaccount "github.com/merge-api/merge-go-client/v2/ats/deleteaccount"
	departments "github.com/merge-api/merge-go-client/v2/ats/departments"
	eeocs "github.com/merge-api/merge-go-client/v2/ats/eeocs"
	fieldmapping "github.com/merge-api/merge-go-client/v2/ats/fieldmapping"
	forceresync "github.com/merge-api/merge-go-client/v2/ats/forceresync"
	generatekey "github.com/merge-api/merge-go-client/v2/ats/generatekey"
	interviews "github.com/merge-api/merge-go-client/v2/ats/interviews"
	issues "github.com/merge-api/merge-go-client/v2/ats/issues"
	jobinterviewstages "github.com/merge-api/merge-go-client/v2/ats/jobinterviewstages"
	jobpostings "github.com/merge-api/merge-go-client/v2/ats/jobpostings"
	jobs "github.com/merge-api/merge-go-client/v2/ats/jobs"
	linkedaccounts "github.com/merge-api/merge-go-client/v2/ats/linkedaccounts"
	linktoken "github.com/merge-api/merge-go-client/v2/ats/linktoken"
	offers "github.com/merge-api/merge-go-client/v2/ats/offers"
	offices "github.com/merge-api/merge-go-client/v2/ats/offices"
	passthrough "github.com/merge-api/merge-go-client/v2/ats/passthrough"
	regeneratekey "github.com/merge-api/merge-go-client/v2/ats/regeneratekey"
	rejectreasons "github.com/merge-api/merge-go-client/v2/ats/rejectreasons"
	scopes "github.com/merge-api/merge-go-client/v2/ats/scopes"
	scorecards "github.com/merge-api/merge-go-client/v2/ats/scorecards"
	syncstatus "github.com/merge-api/merge-go-client/v2/ats/syncstatus"
	tags "github.com/merge-api/merge-go-client/v2/ats/tags"
	users "github.com/merge-api/merge-go-client/v2/ats/users"
	webhookreceivers "github.com/merge-api/merge-go-client/v2/ats/webhookreceivers"
	core "github.com/merge-api/merge-go-client/v2/core"
	internal "github.com/merge-api/merge-go-client/v2/internal"
	option "github.com/merge-api/merge-go-client/v2/option"
	http "net/http"
)

type Client struct {
	baseURL string
	caller  *internal.Caller
	header  http.Header

	AccountDetails     *accountdetails.Client
	AccountToken       *accounttoken.Client
	Activities         *activities.Client
	Applications       *applications.Client
	AsyncPassthrough   *asyncpassthrough.Client
	Attachments        *attachments.Client
	AuditTrail         *audittrail.Client
	AvailableActions   *availableactions.Client
	Candidates         *candidates.Client
	Scopes             *scopes.Client
	DeleteAccount      *deleteaccount.Client
	Departments        *departments.Client
	Eeocs              *eeocs.Client
	FieldMapping       *fieldmapping.Client
	GenerateKey        *generatekey.Client
	Interviews         *interviews.Client
	Issues             *issues.Client
	JobInterviewStages *jobinterviewstages.Client
	JobPostings        *jobpostings.Client
	Jobs               *jobs.Client
	LinkToken          *linktoken.Client
	LinkedAccounts     *linkedaccounts.Client
	Offers             *offers.Client
	Offices            *offices.Client
	Passthrough        *passthrough.Client
	RegenerateKey      *regeneratekey.Client
	RejectReasons      *rejectreasons.Client
	Scorecards         *scorecards.Client
	SyncStatus         *syncstatus.Client
	ForceResync        *forceresync.Client
	Tags               *tags.Client
	Users              *users.Client
	WebhookReceivers   *webhookreceivers.Client
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		baseURL: options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:             options.ToHeader(),
		AccountDetails:     accountdetails.NewClient(opts...),
		AccountToken:       accounttoken.NewClient(opts...),
		Activities:         activities.NewClient(opts...),
		Applications:       applications.NewClient(opts...),
		AsyncPassthrough:   asyncpassthrough.NewClient(opts...),
		Attachments:        attachments.NewClient(opts...),
		AuditTrail:         audittrail.NewClient(opts...),
		AvailableActions:   availableactions.NewClient(opts...),
		Candidates:         candidates.NewClient(opts...),
		Scopes:             scopes.NewClient(opts...),
		DeleteAccount:      deleteaccount.NewClient(opts...),
		Departments:        departments.NewClient(opts...),
		Eeocs:              eeocs.NewClient(opts...),
		FieldMapping:       fieldmapping.NewClient(opts...),
		GenerateKey:        generatekey.NewClient(opts...),
		Interviews:         interviews.NewClient(opts...),
		Issues:             issues.NewClient(opts...),
		JobInterviewStages: jobinterviewstages.NewClient(opts...),
		JobPostings:        jobpostings.NewClient(opts...),
		Jobs:               jobs.NewClient(opts...),
		LinkToken:          linktoken.NewClient(opts...),
		LinkedAccounts:     linkedaccounts.NewClient(opts...),
		Offers:             offers.NewClient(opts...),
		Offices:            offices.NewClient(opts...),
		Passthrough:        passthrough.NewClient(opts...),
		RegenerateKey:      regeneratekey.NewClient(opts...),
		RejectReasons:      rejectreasons.NewClient(opts...),
		Scorecards:         scorecards.NewClient(opts...),
		SyncStatus:         syncstatus.NewClient(opts...),
		ForceResync:        forceresync.NewClient(opts...),
		Tags:               tags.NewClient(opts...),
		Users:              users.NewClient(opts...),
		WebhookReceivers:   webhookreceivers.NewClient(opts...),
	}
}
