// Code generated by Fern. DO NOT EDIT.

package ats

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/merge-api/merge-go-client/v2/internal"
)

type AccountToken struct {
	AccountToken string              `json:"account_token" url:"account_token"`
	Integration  *AccountIntegration `json:"integration" url:"integration"`
	Id           string              `json:"id" url:"id"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (a *AccountToken) GetAccountToken() string {
	if a == nil {
		return ""
	}
	return a.AccountToken
}

func (a *AccountToken) GetIntegration() *AccountIntegration {
	if a == nil {
		return nil
	}
	return a.Integration
}

func (a *AccountToken) GetId() string {
	if a == nil {
		return ""
	}
	return a.Id
}

func (a *AccountToken) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *AccountToken) UnmarshalJSON(data []byte) error {
	type unmarshaler AccountToken
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = AccountToken(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties
	a.rawJSON = json.RawMessage(data)
	return nil
}

func (a *AccountToken) String() string {
	if len(a.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(a.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}
