// Code generated by Fern. DO NOT EDIT.

package crm

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/merge-api/merge-go-client/v2/internal"
)

type WebhookReceiverRequest struct {
	Event    string  `json:"event" url:"-"`
	IsActive bool    `json:"is_active" url:"-"`
	Key      *string `json:"key,omitempty" url:"-"`
}

type WebhookReceiver struct {
	Event    string  `json:"event" url:"event"`
	IsActive bool    `json:"is_active" url:"is_active"`
	Key      *string `json:"key,omitempty" url:"key,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (w *WebhookReceiver) GetEvent() string {
	if w == nil {
		return ""
	}
	return w.Event
}

func (w *WebhookReceiver) GetIsActive() bool {
	if w == nil {
		return false
	}
	return w.IsActive
}

func (w *WebhookReceiver) GetKey() *string {
	if w == nil {
		return nil
	}
	return w.Key
}

func (w *WebhookReceiver) GetExtraProperties() map[string]interface{} {
	return w.extraProperties
}

func (w *WebhookReceiver) UnmarshalJSON(data []byte) error {
	type unmarshaler WebhookReceiver
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*w = WebhookReceiver(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *w)
	if err != nil {
		return err
	}
	w.extraProperties = extraProperties
	w.rawJSON = json.RawMessage(data)
	return nil
}

func (w *WebhookReceiver) String() string {
	if len(w.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(w.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(w); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", w)
}
