// Code generated by Fern. DO NOT EDIT.

package crm

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/merge-api/merge-go-client/v2/internal"
	time "time"
)

type CustomObjectClassesListRequest struct {
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `json:"-" url:"created_after,omitempty"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `json:"-" url:"created_before,omitempty"`
	// The pagination cursor value.
	Cursor *string `json:"-" url:"cursor,omitempty"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand []*string `json:"-" url:"expand,omitempty"`
	// Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
	IncludeDeletedData *bool `json:"-" url:"include_deleted_data,omitempty"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-" url:"include_remote_data,omitempty"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-" url:"include_shell_data,omitempty"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `json:"-" url:"modified_after,omitempty"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `json:"-" url:"modified_before,omitempty"`
	// Number of results to return per page.
	PageSize *int `json:"-" url:"page_size,omitempty"`
	// The API provider's ID for the given object.
	RemoteId *string `json:"-" url:"remote_id,omitempty"`
}

type CustomObjectClassesRetrieveRequest struct {
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand []*string `json:"-" url:"expand,omitempty"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-" url:"include_remote_data,omitempty"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-" url:"include_shell_data,omitempty"`
}

// # The Custom Object Class Object
// ### Description
// The `Custom Object Class` object is used to represent a Custom Object Schema in the remote system.
// ### Usage Example
// TODO
type CustomObjectClass struct {
	Id *string `json:"id,omitempty" url:"id,omitempty"`
	// The third-party API ID of the matching object.
	RemoteId   *string    `json:"remote_id,omitempty" url:"remote_id,omitempty"`
	CreatedAt  *time.Time `json:"created_at,omitempty" url:"created_at,omitempty"`
	ModifiedAt *time.Time `json:"modified_at,omitempty" url:"modified_at,omitempty"`
	// The custom object class's name.
	Name *string `json:"name,omitempty" url:"name,omitempty"`
	// The custom object class's description.
	Description *string `json:"description,omitempty" url:"description,omitempty"`
	// The custom object class's singular and plural labels.
	Labels map[string]*string                      `json:"labels,omitempty" url:"labels,omitempty"`
	Fields []*RemoteFieldClassForCustomObjectClass `json:"fields,omitempty" url:"fields,omitempty"`
	// The types of associations with other models that the custom object class can have.
	AssociationTypes []map[string]interface{} `json:"association_types,omitempty" url:"association_types,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *CustomObjectClass) GetId() *string {
	if c == nil {
		return nil
	}
	return c.Id
}

func (c *CustomObjectClass) GetRemoteId() *string {
	if c == nil {
		return nil
	}
	return c.RemoteId
}

func (c *CustomObjectClass) GetCreatedAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.CreatedAt
}

func (c *CustomObjectClass) GetModifiedAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.ModifiedAt
}

func (c *CustomObjectClass) GetName() *string {
	if c == nil {
		return nil
	}
	return c.Name
}

func (c *CustomObjectClass) GetDescription() *string {
	if c == nil {
		return nil
	}
	return c.Description
}

func (c *CustomObjectClass) GetLabels() map[string]*string {
	if c == nil {
		return nil
	}
	return c.Labels
}

func (c *CustomObjectClass) GetFields() []*RemoteFieldClassForCustomObjectClass {
	if c == nil {
		return nil
	}
	return c.Fields
}

func (c *CustomObjectClass) GetAssociationTypes() []map[string]interface{} {
	if c == nil {
		return nil
	}
	return c.AssociationTypes
}

func (c *CustomObjectClass) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CustomObjectClass) UnmarshalJSON(data []byte) error {
	type embed CustomObjectClass
	var unmarshaler = struct {
		embed
		CreatedAt  *internal.DateTime `json:"created_at,omitempty"`
		ModifiedAt *internal.DateTime `json:"modified_at,omitempty"`
	}{
		embed: embed(*c),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*c = CustomObjectClass(unmarshaler.embed)
	c.CreatedAt = unmarshaler.CreatedAt.TimePtr()
	c.ModifiedAt = unmarshaler.ModifiedAt.TimePtr()
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *CustomObjectClass) MarshalJSON() ([]byte, error) {
	type embed CustomObjectClass
	var marshaler = struct {
		embed
		CreatedAt  *internal.DateTime `json:"created_at,omitempty"`
		ModifiedAt *internal.DateTime `json:"modified_at,omitempty"`
	}{
		embed:      embed(*c),
		CreatedAt:  internal.NewOptionalDateTime(c.CreatedAt),
		ModifiedAt: internal.NewOptionalDateTime(c.ModifiedAt),
	}
	return json.Marshal(marshaler)
}

func (c *CustomObjectClass) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type PaginatedCustomObjectClassList struct {
	Next     *string              `json:"next,omitempty" url:"next,omitempty"`
	Previous *string              `json:"previous,omitempty" url:"previous,omitempty"`
	Results  []*CustomObjectClass `json:"results,omitempty" url:"results,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (p *PaginatedCustomObjectClassList) GetNext() *string {
	if p == nil {
		return nil
	}
	return p.Next
}

func (p *PaginatedCustomObjectClassList) GetPrevious() *string {
	if p == nil {
		return nil
	}
	return p.Previous
}

func (p *PaginatedCustomObjectClassList) GetResults() []*CustomObjectClass {
	if p == nil {
		return nil
	}
	return p.Results
}

func (p *PaginatedCustomObjectClassList) GetExtraProperties() map[string]interface{} {
	return p.extraProperties
}

func (p *PaginatedCustomObjectClassList) UnmarshalJSON(data []byte) error {
	type unmarshaler PaginatedCustomObjectClassList
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PaginatedCustomObjectClassList(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.extraProperties = extraProperties
	p.rawJSON = json.RawMessage(data)
	return nil
}

func (p *PaginatedCustomObjectClassList) String() string {
	if len(p.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(p.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}

type RemoteFieldClassForCustomObjectClass struct {
	// The datetime that this object was created by Merge.
	CreatedAt *time.Time `json:"created_at,omitempty" url:"created_at,omitempty"`
	// The datetime that this object was modified by Merge.
	ModifiedAt    *time.Time                                              `json:"modified_at,omitempty" url:"modified_at,omitempty"`
	DisplayName   *string                                                 `json:"display_name,omitempty" url:"display_name,omitempty"`
	RemoteKeyName *string                                                 `json:"remote_key_name,omitempty" url:"remote_key_name,omitempty"`
	Description   *string                                                 `json:"description,omitempty" url:"description,omitempty"`
	IsRequired    *bool                                                   `json:"is_required,omitempty" url:"is_required,omitempty"`
	FieldType     *FieldTypeEnum                                          `json:"field_type,omitempty" url:"field_type,omitempty"`
	FieldFormat   *FieldFormatEnum                                        `json:"field_format,omitempty" url:"field_format,omitempty"`
	FieldChoices  []*RemoteFieldClassForCustomObjectClassFieldChoicesItem `json:"field_choices,omitempty" url:"field_choices,omitempty"`
	ItemSchema    *RemoteFieldClassForCustomObjectClassItemSchema         `json:"item_schema,omitempty" url:"item_schema,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (r *RemoteFieldClassForCustomObjectClass) GetCreatedAt() *time.Time {
	if r == nil {
		return nil
	}
	return r.CreatedAt
}

func (r *RemoteFieldClassForCustomObjectClass) GetModifiedAt() *time.Time {
	if r == nil {
		return nil
	}
	return r.ModifiedAt
}

func (r *RemoteFieldClassForCustomObjectClass) GetDisplayName() *string {
	if r == nil {
		return nil
	}
	return r.DisplayName
}

func (r *RemoteFieldClassForCustomObjectClass) GetRemoteKeyName() *string {
	if r == nil {
		return nil
	}
	return r.RemoteKeyName
}

func (r *RemoteFieldClassForCustomObjectClass) GetDescription() *string {
	if r == nil {
		return nil
	}
	return r.Description
}

func (r *RemoteFieldClassForCustomObjectClass) GetIsRequired() *bool {
	if r == nil {
		return nil
	}
	return r.IsRequired
}

func (r *RemoteFieldClassForCustomObjectClass) GetFieldType() *FieldTypeEnum {
	if r == nil {
		return nil
	}
	return r.FieldType
}

func (r *RemoteFieldClassForCustomObjectClass) GetFieldFormat() *FieldFormatEnum {
	if r == nil {
		return nil
	}
	return r.FieldFormat
}

func (r *RemoteFieldClassForCustomObjectClass) GetFieldChoices() []*RemoteFieldClassForCustomObjectClassFieldChoicesItem {
	if r == nil {
		return nil
	}
	return r.FieldChoices
}

func (r *RemoteFieldClassForCustomObjectClass) GetItemSchema() *RemoteFieldClassForCustomObjectClassItemSchema {
	if r == nil {
		return nil
	}
	return r.ItemSchema
}

func (r *RemoteFieldClassForCustomObjectClass) GetExtraProperties() map[string]interface{} {
	return r.extraProperties
}

func (r *RemoteFieldClassForCustomObjectClass) UnmarshalJSON(data []byte) error {
	type embed RemoteFieldClassForCustomObjectClass
	var unmarshaler = struct {
		embed
		CreatedAt  *internal.DateTime `json:"created_at,omitempty"`
		ModifiedAt *internal.DateTime `json:"modified_at,omitempty"`
	}{
		embed: embed(*r),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*r = RemoteFieldClassForCustomObjectClass(unmarshaler.embed)
	r.CreatedAt = unmarshaler.CreatedAt.TimePtr()
	r.ModifiedAt = unmarshaler.ModifiedAt.TimePtr()
	extraProperties, err := internal.ExtractExtraProperties(data, *r)
	if err != nil {
		return err
	}
	r.extraProperties = extraProperties
	r.rawJSON = json.RawMessage(data)
	return nil
}

func (r *RemoteFieldClassForCustomObjectClass) MarshalJSON() ([]byte, error) {
	type embed RemoteFieldClassForCustomObjectClass
	var marshaler = struct {
		embed
		CreatedAt  *internal.DateTime `json:"created_at,omitempty"`
		ModifiedAt *internal.DateTime `json:"modified_at,omitempty"`
	}{
		embed:      embed(*r),
		CreatedAt:  internal.NewOptionalDateTime(r.CreatedAt),
		ModifiedAt: internal.NewOptionalDateTime(r.ModifiedAt),
	}
	return json.Marshal(marshaler)
}

func (r *RemoteFieldClassForCustomObjectClass) String() string {
	if len(r.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(r.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(r); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", r)
}

type RemoteFieldClassForCustomObjectClassFieldChoicesItem struct {
	Value       interface{} `json:"value,omitempty" url:"value,omitempty"`
	DisplayName *string     `json:"display_name,omitempty" url:"display_name,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (r *RemoteFieldClassForCustomObjectClassFieldChoicesItem) GetValue() interface{} {
	if r == nil {
		return nil
	}
	return r.Value
}

func (r *RemoteFieldClassForCustomObjectClassFieldChoicesItem) GetDisplayName() *string {
	if r == nil {
		return nil
	}
	return r.DisplayName
}

func (r *RemoteFieldClassForCustomObjectClassFieldChoicesItem) GetExtraProperties() map[string]interface{} {
	return r.extraProperties
}

func (r *RemoteFieldClassForCustomObjectClassFieldChoicesItem) UnmarshalJSON(data []byte) error {
	type unmarshaler RemoteFieldClassForCustomObjectClassFieldChoicesItem
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*r = RemoteFieldClassForCustomObjectClassFieldChoicesItem(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *r)
	if err != nil {
		return err
	}
	r.extraProperties = extraProperties
	r.rawJSON = json.RawMessage(data)
	return nil
}

func (r *RemoteFieldClassForCustomObjectClassFieldChoicesItem) String() string {
	if len(r.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(r.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(r); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", r)
}

type RemoteFieldClassForCustomObjectClassItemSchema struct {
	ItemType    *string   `json:"item_type,omitempty" url:"item_type,omitempty"`
	ItemFormat  *string   `json:"item_format,omitempty" url:"item_format,omitempty"`
	ItemChoices []*string `json:"item_choices,omitempty" url:"item_choices,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (r *RemoteFieldClassForCustomObjectClassItemSchema) GetItemType() *string {
	if r == nil {
		return nil
	}
	return r.ItemType
}

func (r *RemoteFieldClassForCustomObjectClassItemSchema) GetItemFormat() *string {
	if r == nil {
		return nil
	}
	return r.ItemFormat
}

func (r *RemoteFieldClassForCustomObjectClassItemSchema) GetItemChoices() []*string {
	if r == nil {
		return nil
	}
	return r.ItemChoices
}

func (r *RemoteFieldClassForCustomObjectClassItemSchema) GetExtraProperties() map[string]interface{} {
	return r.extraProperties
}

func (r *RemoteFieldClassForCustomObjectClassItemSchema) UnmarshalJSON(data []byte) error {
	type unmarshaler RemoteFieldClassForCustomObjectClassItemSchema
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*r = RemoteFieldClassForCustomObjectClassItemSchema(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *r)
	if err != nil {
		return err
	}
	r.extraProperties = extraProperties
	r.rawJSON = json.RawMessage(data)
	return nil
}

func (r *RemoteFieldClassForCustomObjectClassItemSchema) String() string {
	if len(r.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(r.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(r); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", r)
}
