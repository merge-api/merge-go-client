// Code generated by Fern. DO NOT EDIT.

package crm

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/merge-api/merge-go-client/v2/internal"
	time "time"
)

type CrmAssociationTypeEndpointRequest struct {
	// Whether to include debug fields (such as log file links) in the response.
	IsDebugMode *bool `json:"-" url:"is_debug_mode,omitempty"`
	// Whether or not third-party updates should be run asynchronously.
	RunAsync *bool                          `json:"-" url:"run_async,omitempty"`
	Model    *AssociationTypeRequestRequest `json:"model,omitempty" url:"-"`
}

type CustomObjectClassesAssociationTypesListRequest struct {
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `json:"-" url:"created_after,omitempty"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `json:"-" url:"created_before,omitempty"`
	// The pagination cursor value.
	Cursor *string `json:"-" url:"cursor,omitempty"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand []*string `json:"-" url:"expand,omitempty"`
	// Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
	IncludeDeletedData *bool `json:"-" url:"include_deleted_data,omitempty"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-" url:"include_remote_data,omitempty"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-" url:"include_shell_data,omitempty"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `json:"-" url:"modified_after,omitempty"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `json:"-" url:"modified_before,omitempty"`
	// Number of results to return per page.
	PageSize *int `json:"-" url:"page_size,omitempty"`
	// The API provider's ID for the given object.
	RemoteId *string `json:"-" url:"remote_id,omitempty"`
}

type CustomObjectClassesAssociationTypesRetrieveRequest struct {
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand []*string `json:"-" url:"expand,omitempty"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-" url:"include_remote_data,omitempty"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-" url:"include_shell_data,omitempty"`
}

type AssociationTypeRequestRequest struct {
	SourceObjectClass   *ObjectClassDescriptionRequest   `json:"source_object_class" url:"source_object_class"`
	TargetObjectClasses []*ObjectClassDescriptionRequest `json:"target_object_classes" url:"target_object_classes"`
	RemoteKeyName       string                           `json:"remote_key_name" url:"remote_key_name"`
	DisplayName         *string                          `json:"display_name,omitempty" url:"display_name,omitempty"`
	Cardinality         *CardinalityEnum                 `json:"cardinality,omitempty" url:"cardinality,omitempty"`
	IsRequired          *bool                            `json:"is_required,omitempty" url:"is_required,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (a *AssociationTypeRequestRequest) GetSourceObjectClass() *ObjectClassDescriptionRequest {
	if a == nil {
		return nil
	}
	return a.SourceObjectClass
}

func (a *AssociationTypeRequestRequest) GetTargetObjectClasses() []*ObjectClassDescriptionRequest {
	if a == nil {
		return nil
	}
	return a.TargetObjectClasses
}

func (a *AssociationTypeRequestRequest) GetRemoteKeyName() string {
	if a == nil {
		return ""
	}
	return a.RemoteKeyName
}

func (a *AssociationTypeRequestRequest) GetDisplayName() *string {
	if a == nil {
		return nil
	}
	return a.DisplayName
}

func (a *AssociationTypeRequestRequest) GetCardinality() *CardinalityEnum {
	if a == nil {
		return nil
	}
	return a.Cardinality
}

func (a *AssociationTypeRequestRequest) GetIsRequired() *bool {
	if a == nil {
		return nil
	}
	return a.IsRequired
}

func (a *AssociationTypeRequestRequest) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *AssociationTypeRequestRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler AssociationTypeRequestRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = AssociationTypeRequestRequest(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties
	a.rawJSON = json.RawMessage(data)
	return nil
}

func (a *AssociationTypeRequestRequest) String() string {
	if len(a.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(a.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}

type CrmAssociationTypeResponse struct {
	Model    *AssociationType            `json:"model" url:"model"`
	Warnings []*WarningValidationProblem `json:"warnings" url:"warnings"`
	Errors   []*ErrorValidationProblem   `json:"errors" url:"errors"`
	Logs     []*DebugModeLog             `json:"logs,omitempty" url:"logs,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *CrmAssociationTypeResponse) GetModel() *AssociationType {
	if c == nil {
		return nil
	}
	return c.Model
}

func (c *CrmAssociationTypeResponse) GetWarnings() []*WarningValidationProblem {
	if c == nil {
		return nil
	}
	return c.Warnings
}

func (c *CrmAssociationTypeResponse) GetErrors() []*ErrorValidationProblem {
	if c == nil {
		return nil
	}
	return c.Errors
}

func (c *CrmAssociationTypeResponse) GetLogs() []*DebugModeLog {
	if c == nil {
		return nil
	}
	return c.Logs
}

func (c *CrmAssociationTypeResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CrmAssociationTypeResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CrmAssociationTypeResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CrmAssociationTypeResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *CrmAssociationTypeResponse) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type ObjectClassDescriptionRequest struct {
	Id         string         `json:"id" url:"id"`
	OriginType OriginTypeEnum `json:"origin_type" url:"origin_type"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (o *ObjectClassDescriptionRequest) GetId() string {
	if o == nil {
		return ""
	}
	return o.Id
}

func (o *ObjectClassDescriptionRequest) GetOriginType() OriginTypeEnum {
	if o == nil {
		return ""
	}
	return o.OriginType
}

func (o *ObjectClassDescriptionRequest) GetExtraProperties() map[string]interface{} {
	return o.extraProperties
}

func (o *ObjectClassDescriptionRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler ObjectClassDescriptionRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*o = ObjectClassDescriptionRequest(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *o)
	if err != nil {
		return err
	}
	o.extraProperties = extraProperties
	o.rawJSON = json.RawMessage(data)
	return nil
}

func (o *ObjectClassDescriptionRequest) String() string {
	if len(o.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(o.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(o); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", o)
}

// * `CUSTOM_OBJECT` - CUSTOM_OBJECT
// * `COMMON_MODEL` - COMMON_MODEL
// * `REMOTE_ONLY_MODEL` - REMOTE_ONLY_MODEL
type OriginTypeEnum string

const (
	OriginTypeEnumCustomObject    OriginTypeEnum = "CUSTOM_OBJECT"
	OriginTypeEnumCommonModel     OriginTypeEnum = "COMMON_MODEL"
	OriginTypeEnumRemoteOnlyModel OriginTypeEnum = "REMOTE_ONLY_MODEL"
)

func NewOriginTypeEnumFromString(s string) (OriginTypeEnum, error) {
	switch s {
	case "CUSTOM_OBJECT":
		return OriginTypeEnumCustomObject, nil
	case "COMMON_MODEL":
		return OriginTypeEnumCommonModel, nil
	case "REMOTE_ONLY_MODEL":
		return OriginTypeEnumRemoteOnlyModel, nil
	}
	var t OriginTypeEnum
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (o OriginTypeEnum) Ptr() *OriginTypeEnum {
	return &o
}

type PaginatedAssociationTypeList struct {
	Next     *string            `json:"next,omitempty" url:"next,omitempty"`
	Previous *string            `json:"previous,omitempty" url:"previous,omitempty"`
	Results  []*AssociationType `json:"results,omitempty" url:"results,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (p *PaginatedAssociationTypeList) GetNext() *string {
	if p == nil {
		return nil
	}
	return p.Next
}

func (p *PaginatedAssociationTypeList) GetPrevious() *string {
	if p == nil {
		return nil
	}
	return p.Previous
}

func (p *PaginatedAssociationTypeList) GetResults() []*AssociationType {
	if p == nil {
		return nil
	}
	return p.Results
}

func (p *PaginatedAssociationTypeList) GetExtraProperties() map[string]interface{} {
	return p.extraProperties
}

func (p *PaginatedAssociationTypeList) UnmarshalJSON(data []byte) error {
	type unmarshaler PaginatedAssociationTypeList
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PaginatedAssociationTypeList(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.extraProperties = extraProperties
	p.rawJSON = json.RawMessage(data)
	return nil
}

func (p *PaginatedAssociationTypeList) String() string {
	if len(p.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(p.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}
