// This file was auto-generated by Fern from our API Definition.

package crm

import (
	fmt "fmt"
	time "time"
)

type TaskEndpointRequest struct {
	// Whether to include debug fields (such as log file links) in the response.
	IsDebugMode *bool `json:"-"`
	// Whether or not third-party updates should be run asynchronously.
	RunAsync *bool        `json:"-"`
	Model    *TaskRequest `json:"model,omitempty"`
}

type TasksListRequest struct {
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `json:"-"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `json:"-"`
	// The pagination cursor value.
	Cursor *string `json:"-"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *TasksListRequestExpand `json:"-"`
	// Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
	IncludeDeletedData *bool `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format.
	IncludeRemoteFields *bool `json:"-"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `json:"-"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `json:"-"`
	// Number of results to return per page.
	PageSize *int `json:"-"`
	// The API provider's ID for the given object.
	RemoteId *string `json:"-"`
}

type PatchedTaskEndpointRequest struct {
	// Whether to include debug fields (such as log file links) in the response.
	IsDebugMode *bool `json:"-"`
	// Whether or not third-party updates should be run asynchronously.
	RunAsync *bool               `json:"-"`
	Model    *PatchedTaskRequest `json:"model,omitempty"`
}

type TasksRemoteFieldClassesListRequest struct {
	// The pagination cursor value.
	Cursor *string `json:"-"`
	// Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
	IncludeDeletedData *bool `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format.
	IncludeRemoteFields *bool `json:"-"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-"`
	// If provided, will only return remote field classes with this is_common_model_field value
	IsCommonModelField *bool `json:"-"`
	// Number of results to return per page.
	PageSize *int `json:"-"`
}

type TasksRetrieveRequest struct {
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *TasksRetrieveRequestExpand `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format.
	IncludeRemoteFields *bool `json:"-"`
}

type TasksListRequestExpand string

const (
	TasksListRequestExpandAccount                 TasksListRequestExpand = "account"
	TasksListRequestExpandAccountOpportunity      TasksListRequestExpand = "account,opportunity"
	TasksListRequestExpandOpportunity             TasksListRequestExpand = "opportunity"
	TasksListRequestExpandOwner                   TasksListRequestExpand = "owner"
	TasksListRequestExpandOwnerAccount            TasksListRequestExpand = "owner,account"
	TasksListRequestExpandOwnerAccountOpportunity TasksListRequestExpand = "owner,account,opportunity"
	TasksListRequestExpandOwnerOpportunity        TasksListRequestExpand = "owner,opportunity"
)

func NewTasksListRequestExpandFromString(s string) (TasksListRequestExpand, error) {
	switch s {
	case "account":
		return TasksListRequestExpandAccount, nil
	case "account,opportunity":
		return TasksListRequestExpandAccountOpportunity, nil
	case "opportunity":
		return TasksListRequestExpandOpportunity, nil
	case "owner":
		return TasksListRequestExpandOwner, nil
	case "owner,account":
		return TasksListRequestExpandOwnerAccount, nil
	case "owner,account,opportunity":
		return TasksListRequestExpandOwnerAccountOpportunity, nil
	case "owner,opportunity":
		return TasksListRequestExpandOwnerOpportunity, nil
	}
	var t TasksListRequestExpand
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (t TasksListRequestExpand) Ptr() *TasksListRequestExpand {
	return &t
}

type TasksRetrieveRequestExpand string

const (
	TasksRetrieveRequestExpandAccount                 TasksRetrieveRequestExpand = "account"
	TasksRetrieveRequestExpandAccountOpportunity      TasksRetrieveRequestExpand = "account,opportunity"
	TasksRetrieveRequestExpandOpportunity             TasksRetrieveRequestExpand = "opportunity"
	TasksRetrieveRequestExpandOwner                   TasksRetrieveRequestExpand = "owner"
	TasksRetrieveRequestExpandOwnerAccount            TasksRetrieveRequestExpand = "owner,account"
	TasksRetrieveRequestExpandOwnerAccountOpportunity TasksRetrieveRequestExpand = "owner,account,opportunity"
	TasksRetrieveRequestExpandOwnerOpportunity        TasksRetrieveRequestExpand = "owner,opportunity"
)

func NewTasksRetrieveRequestExpandFromString(s string) (TasksRetrieveRequestExpand, error) {
	switch s {
	case "account":
		return TasksRetrieveRequestExpandAccount, nil
	case "account,opportunity":
		return TasksRetrieveRequestExpandAccountOpportunity, nil
	case "opportunity":
		return TasksRetrieveRequestExpandOpportunity, nil
	case "owner":
		return TasksRetrieveRequestExpandOwner, nil
	case "owner,account":
		return TasksRetrieveRequestExpandOwnerAccount, nil
	case "owner,account,opportunity":
		return TasksRetrieveRequestExpandOwnerAccountOpportunity, nil
	case "owner,opportunity":
		return TasksRetrieveRequestExpandOwnerOpportunity, nil
	}
	var t TasksRetrieveRequestExpand
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (t TasksRetrieveRequestExpand) Ptr() *TasksRetrieveRequestExpand {
	return &t
}
