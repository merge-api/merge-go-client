// This file was auto-generated by Fern from our API Definition.

package crm

import (
	fmt "fmt"
	time "time"
)

type NoteEndpointRequest struct {
	// Whether to include debug fields (such as log file links) in the response.
	IsDebugMode *bool `json:"-"`
	// Whether or not third-party updates should be run asynchronously.
	RunAsync *bool        `json:"-"`
	Model    *NoteRequest `json:"model,omitempty"`
}

type NotesListRequest struct {
	// If provided, will only return notes with this account.
	AccountId *string `json:"-"`
	// If provided, will only return notes with this contact.
	ContactId *string `json:"-"`
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `json:"-"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `json:"-"`
	// The pagination cursor value.
	Cursor *string `json:"-"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *NotesListRequestExpand `json:"-"`
	// Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
	IncludeDeletedData *bool `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format.
	IncludeRemoteFields *bool `json:"-"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `json:"-"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `json:"-"`
	// If provided, will only return notes with this opportunity.
	OpportunityId *string `json:"-"`
	// If provided, will only return notes with this owner.
	OwnerId *string `json:"-"`
	// Number of results to return per page.
	PageSize *int `json:"-"`
	// The API provider's ID for the given object.
	RemoteId *string `json:"-"`
}

type NotesRemoteFieldClassesListRequest struct {
	// The pagination cursor value.
	Cursor *string `json:"-"`
	// Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
	IncludeDeletedData *bool `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format.
	IncludeRemoteFields *bool `json:"-"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-"`
	// If provided, will only return remote field classes with this is_common_model_field value
	IsCommonModelField *bool `json:"-"`
	// Number of results to return per page.
	PageSize *int `json:"-"`
}

type NotesRetrieveRequest struct {
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *NotesRetrieveRequestExpand `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format.
	IncludeRemoteFields *bool `json:"-"`
}

type NotesListRequestExpand string

const (
	NotesListRequestExpandAccount                        NotesListRequestExpand = "account"
	NotesListRequestExpandAccountOpportunity             NotesListRequestExpand = "account,opportunity"
	NotesListRequestExpandContact                        NotesListRequestExpand = "contact"
	NotesListRequestExpandContactAccount                 NotesListRequestExpand = "contact,account"
	NotesListRequestExpandContactAccountOpportunity      NotesListRequestExpand = "contact,account,opportunity"
	NotesListRequestExpandContactOpportunity             NotesListRequestExpand = "contact,opportunity"
	NotesListRequestExpandOpportunity                    NotesListRequestExpand = "opportunity"
	NotesListRequestExpandOwner                          NotesListRequestExpand = "owner"
	NotesListRequestExpandOwnerAccount                   NotesListRequestExpand = "owner,account"
	NotesListRequestExpandOwnerAccountOpportunity        NotesListRequestExpand = "owner,account,opportunity"
	NotesListRequestExpandOwnerContact                   NotesListRequestExpand = "owner,contact"
	NotesListRequestExpandOwnerContactAccount            NotesListRequestExpand = "owner,contact,account"
	NotesListRequestExpandOwnerContactAccountOpportunity NotesListRequestExpand = "owner,contact,account,opportunity"
	NotesListRequestExpandOwnerContactOpportunity        NotesListRequestExpand = "owner,contact,opportunity"
	NotesListRequestExpandOwnerOpportunity               NotesListRequestExpand = "owner,opportunity"
)

func NewNotesListRequestExpandFromString(s string) (NotesListRequestExpand, error) {
	switch s {
	case "account":
		return NotesListRequestExpandAccount, nil
	case "account,opportunity":
		return NotesListRequestExpandAccountOpportunity, nil
	case "contact":
		return NotesListRequestExpandContact, nil
	case "contact,account":
		return NotesListRequestExpandContactAccount, nil
	case "contact,account,opportunity":
		return NotesListRequestExpandContactAccountOpportunity, nil
	case "contact,opportunity":
		return NotesListRequestExpandContactOpportunity, nil
	case "opportunity":
		return NotesListRequestExpandOpportunity, nil
	case "owner":
		return NotesListRequestExpandOwner, nil
	case "owner,account":
		return NotesListRequestExpandOwnerAccount, nil
	case "owner,account,opportunity":
		return NotesListRequestExpandOwnerAccountOpportunity, nil
	case "owner,contact":
		return NotesListRequestExpandOwnerContact, nil
	case "owner,contact,account":
		return NotesListRequestExpandOwnerContactAccount, nil
	case "owner,contact,account,opportunity":
		return NotesListRequestExpandOwnerContactAccountOpportunity, nil
	case "owner,contact,opportunity":
		return NotesListRequestExpandOwnerContactOpportunity, nil
	case "owner,opportunity":
		return NotesListRequestExpandOwnerOpportunity, nil
	}
	var t NotesListRequestExpand
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (n NotesListRequestExpand) Ptr() *NotesListRequestExpand {
	return &n
}

type NotesRetrieveRequestExpand string

const (
	NotesRetrieveRequestExpandAccount                        NotesRetrieveRequestExpand = "account"
	NotesRetrieveRequestExpandAccountOpportunity             NotesRetrieveRequestExpand = "account,opportunity"
	NotesRetrieveRequestExpandContact                        NotesRetrieveRequestExpand = "contact"
	NotesRetrieveRequestExpandContactAccount                 NotesRetrieveRequestExpand = "contact,account"
	NotesRetrieveRequestExpandContactAccountOpportunity      NotesRetrieveRequestExpand = "contact,account,opportunity"
	NotesRetrieveRequestExpandContactOpportunity             NotesRetrieveRequestExpand = "contact,opportunity"
	NotesRetrieveRequestExpandOpportunity                    NotesRetrieveRequestExpand = "opportunity"
	NotesRetrieveRequestExpandOwner                          NotesRetrieveRequestExpand = "owner"
	NotesRetrieveRequestExpandOwnerAccount                   NotesRetrieveRequestExpand = "owner,account"
	NotesRetrieveRequestExpandOwnerAccountOpportunity        NotesRetrieveRequestExpand = "owner,account,opportunity"
	NotesRetrieveRequestExpandOwnerContact                   NotesRetrieveRequestExpand = "owner,contact"
	NotesRetrieveRequestExpandOwnerContactAccount            NotesRetrieveRequestExpand = "owner,contact,account"
	NotesRetrieveRequestExpandOwnerContactAccountOpportunity NotesRetrieveRequestExpand = "owner,contact,account,opportunity"
	NotesRetrieveRequestExpandOwnerContactOpportunity        NotesRetrieveRequestExpand = "owner,contact,opportunity"
	NotesRetrieveRequestExpandOwnerOpportunity               NotesRetrieveRequestExpand = "owner,opportunity"
)

func NewNotesRetrieveRequestExpandFromString(s string) (NotesRetrieveRequestExpand, error) {
	switch s {
	case "account":
		return NotesRetrieveRequestExpandAccount, nil
	case "account,opportunity":
		return NotesRetrieveRequestExpandAccountOpportunity, nil
	case "contact":
		return NotesRetrieveRequestExpandContact, nil
	case "contact,account":
		return NotesRetrieveRequestExpandContactAccount, nil
	case "contact,account,opportunity":
		return NotesRetrieveRequestExpandContactAccountOpportunity, nil
	case "contact,opportunity":
		return NotesRetrieveRequestExpandContactOpportunity, nil
	case "opportunity":
		return NotesRetrieveRequestExpandOpportunity, nil
	case "owner":
		return NotesRetrieveRequestExpandOwner, nil
	case "owner,account":
		return NotesRetrieveRequestExpandOwnerAccount, nil
	case "owner,account,opportunity":
		return NotesRetrieveRequestExpandOwnerAccountOpportunity, nil
	case "owner,contact":
		return NotesRetrieveRequestExpandOwnerContact, nil
	case "owner,contact,account":
		return NotesRetrieveRequestExpandOwnerContactAccount, nil
	case "owner,contact,account,opportunity":
		return NotesRetrieveRequestExpandOwnerContactAccountOpportunity, nil
	case "owner,contact,opportunity":
		return NotesRetrieveRequestExpandOwnerContactOpportunity, nil
	case "owner,opportunity":
		return NotesRetrieveRequestExpandOwnerOpportunity, nil
	}
	var t NotesRetrieveRequestExpand
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (n NotesRetrieveRequestExpand) Ptr() *NotesRetrieveRequestExpand {
	return &n
}
