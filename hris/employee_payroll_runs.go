// This file was auto-generated by Fern from our API Definition.

package hris

import (
	fmt "fmt"
	time "time"
)

type EmployeePayrollRunsListRequest struct {
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `json:"-"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `json:"-"`
	// The pagination cursor value.
	Cursor *string `json:"-"`
	// If provided, will only return employee payroll runs for this employee.
	EmployeeId *string `json:"-"`
	// If provided, will only return employee payroll runs ended after this datetime.
	EndedAfter *time.Time `json:"-"`
	// If provided, will only return employee payroll runs ended before this datetime.
	EndedBefore *time.Time `json:"-"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *EmployeePayrollRunsListRequestExpand `json:"-"`
	// Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
	IncludeDeletedData *bool `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `json:"-"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `json:"-"`
	// Number of results to return per page.
	PageSize *int `json:"-"`
	// If provided, will only return employee payroll runs for this employee.
	PayrollRunId *string `json:"-"`
	// The API provider's ID for the given object.
	RemoteId *string `json:"-"`
	// If provided, will only return employee payroll runs started after this datetime.
	StartedAfter *time.Time `json:"-"`
	// If provided, will only return employee payroll runs started before this datetime.
	StartedBefore *time.Time `json:"-"`
}

type EmployeePayrollRunsRetrieveRequest struct {
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand *EmployeePayrollRunsRetrieveRequestExpand `json:"-"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-"`
}

type EmployeePayrollRunsListRequestExpand string

const (
	EmployeePayrollRunsListRequestExpandEmployee           EmployeePayrollRunsListRequestExpand = "employee"
	EmployeePayrollRunsListRequestExpandEmployeePayrollRun EmployeePayrollRunsListRequestExpand = "employee,payroll_run"
	EmployeePayrollRunsListRequestExpandPayrollRun         EmployeePayrollRunsListRequestExpand = "payroll_run"
)

func NewEmployeePayrollRunsListRequestExpandFromString(s string) (EmployeePayrollRunsListRequestExpand, error) {
	switch s {
	case "employee":
		return EmployeePayrollRunsListRequestExpandEmployee, nil
	case "employee,payroll_run":
		return EmployeePayrollRunsListRequestExpandEmployeePayrollRun, nil
	case "payroll_run":
		return EmployeePayrollRunsListRequestExpandPayrollRun, nil
	}
	var t EmployeePayrollRunsListRequestExpand
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (e EmployeePayrollRunsListRequestExpand) Ptr() *EmployeePayrollRunsListRequestExpand {
	return &e
}

type EmployeePayrollRunsRetrieveRequestExpand string

const (
	EmployeePayrollRunsRetrieveRequestExpandEmployee           EmployeePayrollRunsRetrieveRequestExpand = "employee"
	EmployeePayrollRunsRetrieveRequestExpandEmployeePayrollRun EmployeePayrollRunsRetrieveRequestExpand = "employee,payroll_run"
	EmployeePayrollRunsRetrieveRequestExpandPayrollRun         EmployeePayrollRunsRetrieveRequestExpand = "payroll_run"
)

func NewEmployeePayrollRunsRetrieveRequestExpandFromString(s string) (EmployeePayrollRunsRetrieveRequestExpand, error) {
	switch s {
	case "employee":
		return EmployeePayrollRunsRetrieveRequestExpandEmployee, nil
	case "employee,payroll_run":
		return EmployeePayrollRunsRetrieveRequestExpandEmployeePayrollRun, nil
	case "payroll_run":
		return EmployeePayrollRunsRetrieveRequestExpandPayrollRun, nil
	}
	var t EmployeePayrollRunsRetrieveRequestExpand
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (e EmployeePayrollRunsRetrieveRequestExpand) Ptr() *EmployeePayrollRunsRetrieveRequestExpand {
	return &e
}
