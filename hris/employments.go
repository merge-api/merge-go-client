// Code generated by Fern. DO NOT EDIT.

package hris

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/merge-api/merge-go-client/v2/internal"
	time "time"
)

type EmploymentsListRequest struct {
	// If provided, will only return objects created after this datetime.
	CreatedAfter *time.Time `json:"-" url:"created_after,omitempty"`
	// If provided, will only return objects created before this datetime.
	CreatedBefore *time.Time `json:"-" url:"created_before,omitempty"`
	// The pagination cursor value.
	Cursor *string `json:"-" url:"cursor,omitempty"`
	// If provided, will only return employments for this employee.
	EmployeeId *string `json:"-" url:"employee_id,omitempty"`
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand []*EmploymentsListRequestExpandItem `json:"-" url:"expand,omitempty"`
	// Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
	IncludeDeletedData *bool `json:"-" url:"include_deleted_data,omitempty"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-" url:"include_remote_data,omitempty"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-" url:"include_shell_data,omitempty"`
	// If provided, only objects synced by Merge after this date time will be returned.
	ModifiedAfter *time.Time `json:"-" url:"modified_after,omitempty"`
	// If provided, only objects synced by Merge before this date time will be returned.
	ModifiedBefore *time.Time `json:"-" url:"modified_before,omitempty"`
	// Overrides the default ordering for this endpoint. Possible values include: effective_date, -effective_date.
	OrderBy *EmploymentsListRequestOrderBy `json:"-" url:"order_by,omitempty"`
	// Number of results to return per page.
	PageSize *int `json:"-" url:"page_size,omitempty"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *EmploymentsListRequestRemoteFields `json:"-" url:"remote_fields,omitempty"`
	// The API provider's ID for the given object.
	RemoteId *string `json:"-" url:"remote_id,omitempty"`
	// A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
	ShowEnumOrigins *EmploymentsListRequestShowEnumOrigins `json:"-" url:"show_enum_origins,omitempty"`
}

type EmploymentsRetrieveRequest struct {
	// Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
	Expand []*EmploymentsRetrieveRequestExpandItem `json:"-" url:"expand,omitempty"`
	// Whether to include the original data Merge fetched from the third-party to produce these models.
	IncludeRemoteData *bool `json:"-" url:"include_remote_data,omitempty"`
	// Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null).
	IncludeShellData *bool `json:"-" url:"include_shell_data,omitempty"`
	// Deprecated. Use show_enum_origins.
	RemoteFields *EmploymentsRetrieveRequestRemoteFields `json:"-" url:"remote_fields,omitempty"`
	// A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
	ShowEnumOrigins *EmploymentsRetrieveRequestShowEnumOrigins `json:"-" url:"show_enum_origins,omitempty"`
}

type EmploymentsListRequestExpandItem string

const (
	EmploymentsListRequestExpandItemEmployee EmploymentsListRequestExpandItem = "employee"
	EmploymentsListRequestExpandItemPayGroup EmploymentsListRequestExpandItem = "pay_group"
)

func NewEmploymentsListRequestExpandItemFromString(s string) (EmploymentsListRequestExpandItem, error) {
	switch s {
	case "employee":
		return EmploymentsListRequestExpandItemEmployee, nil
	case "pay_group":
		return EmploymentsListRequestExpandItemPayGroup, nil
	}
	var t EmploymentsListRequestExpandItem
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (e EmploymentsListRequestExpandItem) Ptr() *EmploymentsListRequestExpandItem {
	return &e
}

type EmploymentsListRequestOrderBy string

const (
	EmploymentsListRequestOrderByEffectiveDateDescending EmploymentsListRequestOrderBy = "-effective_date"
	EmploymentsListRequestOrderByEffectiveDateAscending  EmploymentsListRequestOrderBy = "effective_date"
)

func NewEmploymentsListRequestOrderByFromString(s string) (EmploymentsListRequestOrderBy, error) {
	switch s {
	case "-effective_date":
		return EmploymentsListRequestOrderByEffectiveDateDescending, nil
	case "effective_date":
		return EmploymentsListRequestOrderByEffectiveDateAscending, nil
	}
	var t EmploymentsListRequestOrderBy
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (e EmploymentsListRequestOrderBy) Ptr() *EmploymentsListRequestOrderBy {
	return &e
}

type EmploymentsListRequestRemoteFields string

const (
	EmploymentsListRequestRemoteFieldsEmploymentType                                EmploymentsListRequestRemoteFields = "employment_type"
	EmploymentsListRequestRemoteFieldsEmploymentTypeFlsaStatus                      EmploymentsListRequestRemoteFields = "employment_type,flsa_status"
	EmploymentsListRequestRemoteFieldsEmploymentTypeFlsaStatusPayFrequency          EmploymentsListRequestRemoteFields = "employment_type,flsa_status,pay_frequency"
	EmploymentsListRequestRemoteFieldsEmploymentTypeFlsaStatusPayFrequencyPayPeriod EmploymentsListRequestRemoteFields = "employment_type,flsa_status,pay_frequency,pay_period"
	EmploymentsListRequestRemoteFieldsEmploymentTypeFlsaStatusPayPeriod             EmploymentsListRequestRemoteFields = "employment_type,flsa_status,pay_period"
	EmploymentsListRequestRemoteFieldsEmploymentTypePayFrequency                    EmploymentsListRequestRemoteFields = "employment_type,pay_frequency"
	EmploymentsListRequestRemoteFieldsEmploymentTypePayFrequencyPayPeriod           EmploymentsListRequestRemoteFields = "employment_type,pay_frequency,pay_period"
	EmploymentsListRequestRemoteFieldsEmploymentTypePayPeriod                       EmploymentsListRequestRemoteFields = "employment_type,pay_period"
	EmploymentsListRequestRemoteFieldsFlsaStatus                                    EmploymentsListRequestRemoteFields = "flsa_status"
	EmploymentsListRequestRemoteFieldsFlsaStatusPayFrequency                        EmploymentsListRequestRemoteFields = "flsa_status,pay_frequency"
	EmploymentsListRequestRemoteFieldsFlsaStatusPayFrequencyPayPeriod               EmploymentsListRequestRemoteFields = "flsa_status,pay_frequency,pay_period"
	EmploymentsListRequestRemoteFieldsFlsaStatusPayPeriod                           EmploymentsListRequestRemoteFields = "flsa_status,pay_period"
	EmploymentsListRequestRemoteFieldsPayFrequency                                  EmploymentsListRequestRemoteFields = "pay_frequency"
	EmploymentsListRequestRemoteFieldsPayFrequencyPayPeriod                         EmploymentsListRequestRemoteFields = "pay_frequency,pay_period"
	EmploymentsListRequestRemoteFieldsPayPeriod                                     EmploymentsListRequestRemoteFields = "pay_period"
)

func NewEmploymentsListRequestRemoteFieldsFromString(s string) (EmploymentsListRequestRemoteFields, error) {
	switch s {
	case "employment_type":
		return EmploymentsListRequestRemoteFieldsEmploymentType, nil
	case "employment_type,flsa_status":
		return EmploymentsListRequestRemoteFieldsEmploymentTypeFlsaStatus, nil
	case "employment_type,flsa_status,pay_frequency":
		return EmploymentsListRequestRemoteFieldsEmploymentTypeFlsaStatusPayFrequency, nil
	case "employment_type,flsa_status,pay_frequency,pay_period":
		return EmploymentsListRequestRemoteFieldsEmploymentTypeFlsaStatusPayFrequencyPayPeriod, nil
	case "employment_type,flsa_status,pay_period":
		return EmploymentsListRequestRemoteFieldsEmploymentTypeFlsaStatusPayPeriod, nil
	case "employment_type,pay_frequency":
		return EmploymentsListRequestRemoteFieldsEmploymentTypePayFrequency, nil
	case "employment_type,pay_frequency,pay_period":
		return EmploymentsListRequestRemoteFieldsEmploymentTypePayFrequencyPayPeriod, nil
	case "employment_type,pay_period":
		return EmploymentsListRequestRemoteFieldsEmploymentTypePayPeriod, nil
	case "flsa_status":
		return EmploymentsListRequestRemoteFieldsFlsaStatus, nil
	case "flsa_status,pay_frequency":
		return EmploymentsListRequestRemoteFieldsFlsaStatusPayFrequency, nil
	case "flsa_status,pay_frequency,pay_period":
		return EmploymentsListRequestRemoteFieldsFlsaStatusPayFrequencyPayPeriod, nil
	case "flsa_status,pay_period":
		return EmploymentsListRequestRemoteFieldsFlsaStatusPayPeriod, nil
	case "pay_frequency":
		return EmploymentsListRequestRemoteFieldsPayFrequency, nil
	case "pay_frequency,pay_period":
		return EmploymentsListRequestRemoteFieldsPayFrequencyPayPeriod, nil
	case "pay_period":
		return EmploymentsListRequestRemoteFieldsPayPeriod, nil
	}
	var t EmploymentsListRequestRemoteFields
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (e EmploymentsListRequestRemoteFields) Ptr() *EmploymentsListRequestRemoteFields {
	return &e
}

type EmploymentsListRequestShowEnumOrigins string

const (
	EmploymentsListRequestShowEnumOriginsEmploymentType                                EmploymentsListRequestShowEnumOrigins = "employment_type"
	EmploymentsListRequestShowEnumOriginsEmploymentTypeFlsaStatus                      EmploymentsListRequestShowEnumOrigins = "employment_type,flsa_status"
	EmploymentsListRequestShowEnumOriginsEmploymentTypeFlsaStatusPayFrequency          EmploymentsListRequestShowEnumOrigins = "employment_type,flsa_status,pay_frequency"
	EmploymentsListRequestShowEnumOriginsEmploymentTypeFlsaStatusPayFrequencyPayPeriod EmploymentsListRequestShowEnumOrigins = "employment_type,flsa_status,pay_frequency,pay_period"
	EmploymentsListRequestShowEnumOriginsEmploymentTypeFlsaStatusPayPeriod             EmploymentsListRequestShowEnumOrigins = "employment_type,flsa_status,pay_period"
	EmploymentsListRequestShowEnumOriginsEmploymentTypePayFrequency                    EmploymentsListRequestShowEnumOrigins = "employment_type,pay_frequency"
	EmploymentsListRequestShowEnumOriginsEmploymentTypePayFrequencyPayPeriod           EmploymentsListRequestShowEnumOrigins = "employment_type,pay_frequency,pay_period"
	EmploymentsListRequestShowEnumOriginsEmploymentTypePayPeriod                       EmploymentsListRequestShowEnumOrigins = "employment_type,pay_period"
	EmploymentsListRequestShowEnumOriginsFlsaStatus                                    EmploymentsListRequestShowEnumOrigins = "flsa_status"
	EmploymentsListRequestShowEnumOriginsFlsaStatusPayFrequency                        EmploymentsListRequestShowEnumOrigins = "flsa_status,pay_frequency"
	EmploymentsListRequestShowEnumOriginsFlsaStatusPayFrequencyPayPeriod               EmploymentsListRequestShowEnumOrigins = "flsa_status,pay_frequency,pay_period"
	EmploymentsListRequestShowEnumOriginsFlsaStatusPayPeriod                           EmploymentsListRequestShowEnumOrigins = "flsa_status,pay_period"
	EmploymentsListRequestShowEnumOriginsPayFrequency                                  EmploymentsListRequestShowEnumOrigins = "pay_frequency"
	EmploymentsListRequestShowEnumOriginsPayFrequencyPayPeriod                         EmploymentsListRequestShowEnumOrigins = "pay_frequency,pay_period"
	EmploymentsListRequestShowEnumOriginsPayPeriod                                     EmploymentsListRequestShowEnumOrigins = "pay_period"
)

func NewEmploymentsListRequestShowEnumOriginsFromString(s string) (EmploymentsListRequestShowEnumOrigins, error) {
	switch s {
	case "employment_type":
		return EmploymentsListRequestShowEnumOriginsEmploymentType, nil
	case "employment_type,flsa_status":
		return EmploymentsListRequestShowEnumOriginsEmploymentTypeFlsaStatus, nil
	case "employment_type,flsa_status,pay_frequency":
		return EmploymentsListRequestShowEnumOriginsEmploymentTypeFlsaStatusPayFrequency, nil
	case "employment_type,flsa_status,pay_frequency,pay_period":
		return EmploymentsListRequestShowEnumOriginsEmploymentTypeFlsaStatusPayFrequencyPayPeriod, nil
	case "employment_type,flsa_status,pay_period":
		return EmploymentsListRequestShowEnumOriginsEmploymentTypeFlsaStatusPayPeriod, nil
	case "employment_type,pay_frequency":
		return EmploymentsListRequestShowEnumOriginsEmploymentTypePayFrequency, nil
	case "employment_type,pay_frequency,pay_period":
		return EmploymentsListRequestShowEnumOriginsEmploymentTypePayFrequencyPayPeriod, nil
	case "employment_type,pay_period":
		return EmploymentsListRequestShowEnumOriginsEmploymentTypePayPeriod, nil
	case "flsa_status":
		return EmploymentsListRequestShowEnumOriginsFlsaStatus, nil
	case "flsa_status,pay_frequency":
		return EmploymentsListRequestShowEnumOriginsFlsaStatusPayFrequency, nil
	case "flsa_status,pay_frequency,pay_period":
		return EmploymentsListRequestShowEnumOriginsFlsaStatusPayFrequencyPayPeriod, nil
	case "flsa_status,pay_period":
		return EmploymentsListRequestShowEnumOriginsFlsaStatusPayPeriod, nil
	case "pay_frequency":
		return EmploymentsListRequestShowEnumOriginsPayFrequency, nil
	case "pay_frequency,pay_period":
		return EmploymentsListRequestShowEnumOriginsPayFrequencyPayPeriod, nil
	case "pay_period":
		return EmploymentsListRequestShowEnumOriginsPayPeriod, nil
	}
	var t EmploymentsListRequestShowEnumOrigins
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (e EmploymentsListRequestShowEnumOrigins) Ptr() *EmploymentsListRequestShowEnumOrigins {
	return &e
}

type EmploymentsRetrieveRequestExpandItem string

const (
	EmploymentsRetrieveRequestExpandItemEmployee EmploymentsRetrieveRequestExpandItem = "employee"
	EmploymentsRetrieveRequestExpandItemPayGroup EmploymentsRetrieveRequestExpandItem = "pay_group"
)

func NewEmploymentsRetrieveRequestExpandItemFromString(s string) (EmploymentsRetrieveRequestExpandItem, error) {
	switch s {
	case "employee":
		return EmploymentsRetrieveRequestExpandItemEmployee, nil
	case "pay_group":
		return EmploymentsRetrieveRequestExpandItemPayGroup, nil
	}
	var t EmploymentsRetrieveRequestExpandItem
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (e EmploymentsRetrieveRequestExpandItem) Ptr() *EmploymentsRetrieveRequestExpandItem {
	return &e
}

type EmploymentsRetrieveRequestRemoteFields string

const (
	EmploymentsRetrieveRequestRemoteFieldsEmploymentType                                EmploymentsRetrieveRequestRemoteFields = "employment_type"
	EmploymentsRetrieveRequestRemoteFieldsEmploymentTypeFlsaStatus                      EmploymentsRetrieveRequestRemoteFields = "employment_type,flsa_status"
	EmploymentsRetrieveRequestRemoteFieldsEmploymentTypeFlsaStatusPayFrequency          EmploymentsRetrieveRequestRemoteFields = "employment_type,flsa_status,pay_frequency"
	EmploymentsRetrieveRequestRemoteFieldsEmploymentTypeFlsaStatusPayFrequencyPayPeriod EmploymentsRetrieveRequestRemoteFields = "employment_type,flsa_status,pay_frequency,pay_period"
	EmploymentsRetrieveRequestRemoteFieldsEmploymentTypeFlsaStatusPayPeriod             EmploymentsRetrieveRequestRemoteFields = "employment_type,flsa_status,pay_period"
	EmploymentsRetrieveRequestRemoteFieldsEmploymentTypePayFrequency                    EmploymentsRetrieveRequestRemoteFields = "employment_type,pay_frequency"
	EmploymentsRetrieveRequestRemoteFieldsEmploymentTypePayFrequencyPayPeriod           EmploymentsRetrieveRequestRemoteFields = "employment_type,pay_frequency,pay_period"
	EmploymentsRetrieveRequestRemoteFieldsEmploymentTypePayPeriod                       EmploymentsRetrieveRequestRemoteFields = "employment_type,pay_period"
	EmploymentsRetrieveRequestRemoteFieldsFlsaStatus                                    EmploymentsRetrieveRequestRemoteFields = "flsa_status"
	EmploymentsRetrieveRequestRemoteFieldsFlsaStatusPayFrequency                        EmploymentsRetrieveRequestRemoteFields = "flsa_status,pay_frequency"
	EmploymentsRetrieveRequestRemoteFieldsFlsaStatusPayFrequencyPayPeriod               EmploymentsRetrieveRequestRemoteFields = "flsa_status,pay_frequency,pay_period"
	EmploymentsRetrieveRequestRemoteFieldsFlsaStatusPayPeriod                           EmploymentsRetrieveRequestRemoteFields = "flsa_status,pay_period"
	EmploymentsRetrieveRequestRemoteFieldsPayFrequency                                  EmploymentsRetrieveRequestRemoteFields = "pay_frequency"
	EmploymentsRetrieveRequestRemoteFieldsPayFrequencyPayPeriod                         EmploymentsRetrieveRequestRemoteFields = "pay_frequency,pay_period"
	EmploymentsRetrieveRequestRemoteFieldsPayPeriod                                     EmploymentsRetrieveRequestRemoteFields = "pay_period"
)

func NewEmploymentsRetrieveRequestRemoteFieldsFromString(s string) (EmploymentsRetrieveRequestRemoteFields, error) {
	switch s {
	case "employment_type":
		return EmploymentsRetrieveRequestRemoteFieldsEmploymentType, nil
	case "employment_type,flsa_status":
		return EmploymentsRetrieveRequestRemoteFieldsEmploymentTypeFlsaStatus, nil
	case "employment_type,flsa_status,pay_frequency":
		return EmploymentsRetrieveRequestRemoteFieldsEmploymentTypeFlsaStatusPayFrequency, nil
	case "employment_type,flsa_status,pay_frequency,pay_period":
		return EmploymentsRetrieveRequestRemoteFieldsEmploymentTypeFlsaStatusPayFrequencyPayPeriod, nil
	case "employment_type,flsa_status,pay_period":
		return EmploymentsRetrieveRequestRemoteFieldsEmploymentTypeFlsaStatusPayPeriod, nil
	case "employment_type,pay_frequency":
		return EmploymentsRetrieveRequestRemoteFieldsEmploymentTypePayFrequency, nil
	case "employment_type,pay_frequency,pay_period":
		return EmploymentsRetrieveRequestRemoteFieldsEmploymentTypePayFrequencyPayPeriod, nil
	case "employment_type,pay_period":
		return EmploymentsRetrieveRequestRemoteFieldsEmploymentTypePayPeriod, nil
	case "flsa_status":
		return EmploymentsRetrieveRequestRemoteFieldsFlsaStatus, nil
	case "flsa_status,pay_frequency":
		return EmploymentsRetrieveRequestRemoteFieldsFlsaStatusPayFrequency, nil
	case "flsa_status,pay_frequency,pay_period":
		return EmploymentsRetrieveRequestRemoteFieldsFlsaStatusPayFrequencyPayPeriod, nil
	case "flsa_status,pay_period":
		return EmploymentsRetrieveRequestRemoteFieldsFlsaStatusPayPeriod, nil
	case "pay_frequency":
		return EmploymentsRetrieveRequestRemoteFieldsPayFrequency, nil
	case "pay_frequency,pay_period":
		return EmploymentsRetrieveRequestRemoteFieldsPayFrequencyPayPeriod, nil
	case "pay_period":
		return EmploymentsRetrieveRequestRemoteFieldsPayPeriod, nil
	}
	var t EmploymentsRetrieveRequestRemoteFields
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (e EmploymentsRetrieveRequestRemoteFields) Ptr() *EmploymentsRetrieveRequestRemoteFields {
	return &e
}

type EmploymentsRetrieveRequestShowEnumOrigins string

const (
	EmploymentsRetrieveRequestShowEnumOriginsEmploymentType                                EmploymentsRetrieveRequestShowEnumOrigins = "employment_type"
	EmploymentsRetrieveRequestShowEnumOriginsEmploymentTypeFlsaStatus                      EmploymentsRetrieveRequestShowEnumOrigins = "employment_type,flsa_status"
	EmploymentsRetrieveRequestShowEnumOriginsEmploymentTypeFlsaStatusPayFrequency          EmploymentsRetrieveRequestShowEnumOrigins = "employment_type,flsa_status,pay_frequency"
	EmploymentsRetrieveRequestShowEnumOriginsEmploymentTypeFlsaStatusPayFrequencyPayPeriod EmploymentsRetrieveRequestShowEnumOrigins = "employment_type,flsa_status,pay_frequency,pay_period"
	EmploymentsRetrieveRequestShowEnumOriginsEmploymentTypeFlsaStatusPayPeriod             EmploymentsRetrieveRequestShowEnumOrigins = "employment_type,flsa_status,pay_period"
	EmploymentsRetrieveRequestShowEnumOriginsEmploymentTypePayFrequency                    EmploymentsRetrieveRequestShowEnumOrigins = "employment_type,pay_frequency"
	EmploymentsRetrieveRequestShowEnumOriginsEmploymentTypePayFrequencyPayPeriod           EmploymentsRetrieveRequestShowEnumOrigins = "employment_type,pay_frequency,pay_period"
	EmploymentsRetrieveRequestShowEnumOriginsEmploymentTypePayPeriod                       EmploymentsRetrieveRequestShowEnumOrigins = "employment_type,pay_period"
	EmploymentsRetrieveRequestShowEnumOriginsFlsaStatus                                    EmploymentsRetrieveRequestShowEnumOrigins = "flsa_status"
	EmploymentsRetrieveRequestShowEnumOriginsFlsaStatusPayFrequency                        EmploymentsRetrieveRequestShowEnumOrigins = "flsa_status,pay_frequency"
	EmploymentsRetrieveRequestShowEnumOriginsFlsaStatusPayFrequencyPayPeriod               EmploymentsRetrieveRequestShowEnumOrigins = "flsa_status,pay_frequency,pay_period"
	EmploymentsRetrieveRequestShowEnumOriginsFlsaStatusPayPeriod                           EmploymentsRetrieveRequestShowEnumOrigins = "flsa_status,pay_period"
	EmploymentsRetrieveRequestShowEnumOriginsPayFrequency                                  EmploymentsRetrieveRequestShowEnumOrigins = "pay_frequency"
	EmploymentsRetrieveRequestShowEnumOriginsPayFrequencyPayPeriod                         EmploymentsRetrieveRequestShowEnumOrigins = "pay_frequency,pay_period"
	EmploymentsRetrieveRequestShowEnumOriginsPayPeriod                                     EmploymentsRetrieveRequestShowEnumOrigins = "pay_period"
)

func NewEmploymentsRetrieveRequestShowEnumOriginsFromString(s string) (EmploymentsRetrieveRequestShowEnumOrigins, error) {
	switch s {
	case "employment_type":
		return EmploymentsRetrieveRequestShowEnumOriginsEmploymentType, nil
	case "employment_type,flsa_status":
		return EmploymentsRetrieveRequestShowEnumOriginsEmploymentTypeFlsaStatus, nil
	case "employment_type,flsa_status,pay_frequency":
		return EmploymentsRetrieveRequestShowEnumOriginsEmploymentTypeFlsaStatusPayFrequency, nil
	case "employment_type,flsa_status,pay_frequency,pay_period":
		return EmploymentsRetrieveRequestShowEnumOriginsEmploymentTypeFlsaStatusPayFrequencyPayPeriod, nil
	case "employment_type,flsa_status,pay_period":
		return EmploymentsRetrieveRequestShowEnumOriginsEmploymentTypeFlsaStatusPayPeriod, nil
	case "employment_type,pay_frequency":
		return EmploymentsRetrieveRequestShowEnumOriginsEmploymentTypePayFrequency, nil
	case "employment_type,pay_frequency,pay_period":
		return EmploymentsRetrieveRequestShowEnumOriginsEmploymentTypePayFrequencyPayPeriod, nil
	case "employment_type,pay_period":
		return EmploymentsRetrieveRequestShowEnumOriginsEmploymentTypePayPeriod, nil
	case "flsa_status":
		return EmploymentsRetrieveRequestShowEnumOriginsFlsaStatus, nil
	case "flsa_status,pay_frequency":
		return EmploymentsRetrieveRequestShowEnumOriginsFlsaStatusPayFrequency, nil
	case "flsa_status,pay_frequency,pay_period":
		return EmploymentsRetrieveRequestShowEnumOriginsFlsaStatusPayFrequencyPayPeriod, nil
	case "flsa_status,pay_period":
		return EmploymentsRetrieveRequestShowEnumOriginsFlsaStatusPayPeriod, nil
	case "pay_frequency":
		return EmploymentsRetrieveRequestShowEnumOriginsPayFrequency, nil
	case "pay_frequency,pay_period":
		return EmploymentsRetrieveRequestShowEnumOriginsPayFrequencyPayPeriod, nil
	case "pay_period":
		return EmploymentsRetrieveRequestShowEnumOriginsPayPeriod, nil
	}
	var t EmploymentsRetrieveRequestShowEnumOrigins
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (e EmploymentsRetrieveRequestShowEnumOrigins) Ptr() *EmploymentsRetrieveRequestShowEnumOrigins {
	return &e
}

type PaginatedEmploymentList struct {
	Next     *string       `json:"next,omitempty" url:"next,omitempty"`
	Previous *string       `json:"previous,omitempty" url:"previous,omitempty"`
	Results  []*Employment `json:"results,omitempty" url:"results,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (p *PaginatedEmploymentList) GetNext() *string {
	if p == nil {
		return nil
	}
	return p.Next
}

func (p *PaginatedEmploymentList) GetPrevious() *string {
	if p == nil {
		return nil
	}
	return p.Previous
}

func (p *PaginatedEmploymentList) GetResults() []*Employment {
	if p == nil {
		return nil
	}
	return p.Results
}

func (p *PaginatedEmploymentList) GetExtraProperties() map[string]interface{} {
	return p.extraProperties
}

func (p *PaginatedEmploymentList) UnmarshalJSON(data []byte) error {
	type unmarshaler PaginatedEmploymentList
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PaginatedEmploymentList(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.extraProperties = extraProperties
	p.rawJSON = json.RawMessage(data)
	return nil
}

func (p *PaginatedEmploymentList) String() string {
	if len(p.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(p.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}
