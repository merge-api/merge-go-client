// Code generated by Fern. DO NOT EDIT.

package client

import (
	core "github.com/merge-api/merge-go-client/v2/core"
	internal "github.com/merge-api/merge-go-client/v2/internal"
	option "github.com/merge-api/merge-go-client/v2/option"
	accountdetails "github.com/merge-api/merge-go-client/v2/ticketing/accountdetails"
	accounts "github.com/merge-api/merge-go-client/v2/ticketing/accounts"
	accounttoken "github.com/merge-api/merge-go-client/v2/ticketing/accounttoken"
	asyncpassthrough "github.com/merge-api/merge-go-client/v2/ticketing/asyncpassthrough"
	attachments "github.com/merge-api/merge-go-client/v2/ticketing/attachments"
	audittrail "github.com/merge-api/merge-go-client/v2/ticketing/audittrail"
	availableactions "github.com/merge-api/merge-go-client/v2/ticketing/availableactions"
	collections "github.com/merge-api/merge-go-client/v2/ticketing/collections"
	comments "github.com/merge-api/merge-go-client/v2/ticketing/comments"
	contacts "github.com/merge-api/merge-go-client/v2/ticketing/contacts"
	deleteaccount "github.com/merge-api/merge-go-client/v2/ticketing/deleteaccount"
	fieldmapping "github.com/merge-api/merge-go-client/v2/ticketing/fieldmapping"
	forceresync "github.com/merge-api/merge-go-client/v2/ticketing/forceresync"
	generatekey "github.com/merge-api/merge-go-client/v2/ticketing/generatekey"
	issues "github.com/merge-api/merge-go-client/v2/ticketing/issues"
	linkedaccounts "github.com/merge-api/merge-go-client/v2/ticketing/linkedaccounts"
	linktoken "github.com/merge-api/merge-go-client/v2/ticketing/linktoken"
	passthrough "github.com/merge-api/merge-go-client/v2/ticketing/passthrough"
	projects "github.com/merge-api/merge-go-client/v2/ticketing/projects"
	regeneratekey "github.com/merge-api/merge-go-client/v2/ticketing/regeneratekey"
	roles "github.com/merge-api/merge-go-client/v2/ticketing/roles"
	scopes "github.com/merge-api/merge-go-client/v2/ticketing/scopes"
	syncstatus "github.com/merge-api/merge-go-client/v2/ticketing/syncstatus"
	tags "github.com/merge-api/merge-go-client/v2/ticketing/tags"
	teams "github.com/merge-api/merge-go-client/v2/ticketing/teams"
	tickets "github.com/merge-api/merge-go-client/v2/ticketing/tickets"
	users "github.com/merge-api/merge-go-client/v2/ticketing/users"
	webhookreceivers "github.com/merge-api/merge-go-client/v2/ticketing/webhookreceivers"
	http "net/http"
)

type Client struct {
	baseURL string
	caller  *internal.Caller
	header  http.Header

	AccountDetails   *accountdetails.Client
	AccountToken     *accounttoken.Client
	Accounts         *accounts.Client
	AsyncPassthrough *asyncpassthrough.Client
	Attachments      *attachments.Client
	AuditTrail       *audittrail.Client
	AvailableActions *availableactions.Client
	Collections      *collections.Client
	Comments         *comments.Client
	Contacts         *contacts.Client
	Scopes           *scopes.Client
	DeleteAccount    *deleteaccount.Client
	FieldMapping     *fieldmapping.Client
	GenerateKey      *generatekey.Client
	Issues           *issues.Client
	LinkToken        *linktoken.Client
	LinkedAccounts   *linkedaccounts.Client
	Passthrough      *passthrough.Client
	Projects         *projects.Client
	RegenerateKey    *regeneratekey.Client
	Roles            *roles.Client
	SyncStatus       *syncstatus.Client
	ForceResync      *forceresync.Client
	Tags             *tags.Client
	Teams            *teams.Client
	Tickets          *tickets.Client
	Users            *users.Client
	WebhookReceivers *webhookreceivers.Client
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		baseURL: options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:           options.ToHeader(),
		AccountDetails:   accountdetails.NewClient(opts...),
		AccountToken:     accounttoken.NewClient(opts...),
		Accounts:         accounts.NewClient(opts...),
		AsyncPassthrough: asyncpassthrough.NewClient(opts...),
		Attachments:      attachments.NewClient(opts...),
		AuditTrail:       audittrail.NewClient(opts...),
		AvailableActions: availableactions.NewClient(opts...),
		Collections:      collections.NewClient(opts...),
		Comments:         comments.NewClient(opts...),
		Contacts:         contacts.NewClient(opts...),
		Scopes:           scopes.NewClient(opts...),
		DeleteAccount:    deleteaccount.NewClient(opts...),
		FieldMapping:     fieldmapping.NewClient(opts...),
		GenerateKey:      generatekey.NewClient(opts...),
		Issues:           issues.NewClient(opts...),
		LinkToken:        linktoken.NewClient(opts...),
		LinkedAccounts:   linkedaccounts.NewClient(opts...),
		Passthrough:      passthrough.NewClient(opts...),
		Projects:         projects.NewClient(opts...),
		RegenerateKey:    regeneratekey.NewClient(opts...),
		Roles:            roles.NewClient(opts...),
		SyncStatus:       syncstatus.NewClient(opts...),
		ForceResync:      forceresync.NewClient(opts...),
		Tags:             tags.NewClient(opts...),
		Teams:            teams.NewClient(opts...),
		Tickets:          tickets.NewClient(opts...),
		Users:            users.NewClient(opts...),
		WebhookReceivers: webhookreceivers.NewClient(opts...),
	}
}
